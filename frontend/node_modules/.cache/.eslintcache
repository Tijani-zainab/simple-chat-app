[{"C:\\React Apps\\chat\\frontend\\src\\index.js":"1","C:\\React Apps\\chat\\frontend\\src\\reportWebVitals.js":"2","C:\\React Apps\\chat\\frontend\\src\\App.js":"3"},{"size":509,"mtime":1662222249924,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1662221773805,"results":"6","hashOfConfig":"5"},{"size":2776,"mtime":1662513264209,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tpriab",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\React Apps\\chat\\frontend\\src\\index.js",[],[],"C:\\React Apps\\chat\\frontend\\src\\reportWebVitals.js",[],[],"C:\\React Apps\\chat\\frontend\\src\\App.js",["18"],[],"import { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\n// import io from \"socket.io-client\";\nimport { v4 } from 'uuid';\nimport './App.css';\n\n\n// const PORT = 3001;\n// const socket = io(`http://localhost:${PORT}`);\nconst socket = io(`https://chat-app-backend-v1.herokuapp.com/`);\n\nfunction App() {\n\n  const [isConnected, setIsConnected] = useState(socket.isConnected);\n  const [user, setUser] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatIsVisible, setChatIsVisible] = useState(false);\n\n\n  useEffect(() => {\n    \n    socket.on('connect', () => {\n      setIsConnected(true);\n    });\n    socket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    socket.on('receive_msg', (msg) => {\n      setNewMessage((messages) => [...messages, msg]);\n    });\n  \n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n    }\n  \n  }, [isConnected, newMessage]) \n\n  \n  useEffect(() => {\n    socket.on(\"receive_msg\", ({user, message}) => {\n      const msg = `${user} send: ${message}`;\n      setMessages(prevState => [msg, ...prevState]);\n    });\n  }, [socket, messages])\n\n\n  const handleEnterChatRoom = () => {\n    if (user !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", {user, room});\n      setChatIsVisible(true);\n    }\n  }\n\n  const handleSendMessage = () => {\n    const newMsgData = {\n      room: room,\n      user: user,\n      message: newMessage\n    }\n    socket.emit(\"send-msg\", newMsgData);\n    const msg = `${user} send: ${newMessage}`;\n    setMessages(prevState => [msg, ...prevState]);\n    setNewMessage(\"\");\n\n  }\n    \n\n  return (\n    <div className=\"main\">  \n        <h1 className=\"logo\">Chat (...in groups ðŸ˜‰)</h1>\n        { !chatIsVisible ? \n          <>\n            <input className=\"input-field\" type=\"text\" placeholder=\"Enter your name\" value={user} onChange={(e) => setUser(e.target.value)} />\n            <input className=\"input-field\" type=\"text\" placeholder=\"Enter room name\" value={room} onChange={(e) => setRoom(e.target.value)} />\n            <button className=\"btn-chat\" onClick={handleEnterChatRoom}>Enter chat room</button>\n          </>\n          :\n          <>\n            <h5 className=\"chat-desc\">Room: {room} | User: {user}</h5>\n            <div className=\"chat-box\">\n              {messages.map((el => <div key={v4()}>{el}</div>))}\n            </div>\n\n            <input className=\"enter--message\" type=\"text\" placeholder=\"Enter message\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} />\n            <button className=\"btn-chat\" onClick={handleSendMessage}>Send message</button>\n          </>\n        }\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":47,"column":6,"nodeType":"21","endLine":47,"endColumn":24,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [messages]",{"range":"26","text":"27"},[1223,1241],"[messages]"]