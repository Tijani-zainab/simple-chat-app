{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Apps\\\\chat\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport { v4 } from 'uuid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PORT = 3001;\nconst socket = io(`http://localhost:${PORT}`);\n\nfunction App() {\n  _s();\n\n  const [isConnected, setIsConnected] = useState(socket.isConnected);\n  const [user, setUser] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatIsVisible, setChatIsVisible] = useState(false);\n  useEffect(() => {\n    socket.on('connect', () => {\n      setIsConnected(true);\n    });\n    socket.on('disconnect', () => {\n      setIsConnected(false);\n    }); // socket.on('receive_msg', (msg) => {\n    //   setNewMessage((messages) => [...messages, msg]);\n    // });\n\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n    };\n  }, [isConnected]); //newMessage]),\n\n  useEffect(() => {\n    socket.on(\"receive_msg\", _ref => {\n      let {\n        user,\n        message\n      } = _ref;\n      const msg = `${user} send: ${message}`;\n      setMessages(prevState => [msg, ...prevState]);\n    });\n  }, [socket, messages]);\n\n  const handleEnterChatRoom = () => {\n    if (user !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", {\n        user,\n        room\n      });\n      setChatIsVisible(true);\n    }\n  };\n\n  const handleSendMessage = () => {\n    const newMsgData = {\n      room: room,\n      user: user,\n      message: newMessage\n    };\n    socket.emit(\"send-msg\", newMsgData);\n    const msg = `${user} send: ${newMessage}`;\n    setMessages(prevState => [msg, ...prevState]);\n    setNewMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    style: {\n      padding: 20\n    },\n    children: !chatIsVisible ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: user,\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room name\",\n        value: room,\n        onChange: e => setRoom(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnterChatRoom,\n        children: \"Enter chat room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Room: \", room, \" | User: \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: messages.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: el\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter message\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0kTuVh/Ou9Xk3BVg9CCug2fBZ3c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","io","v4","PORT","socket","App","isConnected","setIsConnected","user","setUser","room","setRoom","messages","setMessages","newMessage","setNewMessage","chatIsVisible","setChatIsVisible","on","off","message","msg","prevState","handleEnterChatRoom","emit","handleSendMessage","newMsgData","padding","e","target","value","map","el"],"sources":["C:/React Apps/chat/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport io from \"socket.io-client\";\nimport { v4 } from 'uuid';\nimport './App.css';\n\n\nconst PORT = 3001;\nconst socket = io(`http://localhost:${PORT}`);\n\nfunction App() {\n\n  const [isConnected, setIsConnected] = useState(socket.isConnected);\n  const [user, setUser] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatIsVisible, setChatIsVisible] = useState(false);\n\n\n  useEffect(() => {\n    \n    socket.on('connect', () => {\n      setIsConnected(true);\n    });\n    socket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    // socket.on('receive_msg', (msg) => {\n    //   setNewMessage((messages) => [...messages, msg]);\n    // });\n  \n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n    }\n  \n  }, [isConnected]) //newMessage]),\n\n  \n  useEffect(() => {\n    socket.on(\"receive_msg\", ({user, message}) => {\n      const msg = `${user} send: ${message}`;\n      setMessages(prevState => [msg, ...prevState]);\n    });\n  }, [socket, messages])\n\n\n  const handleEnterChatRoom = () => {\n    if (user !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", {user, room});\n      setChatIsVisible(true);\n    }\n  }\n\n  const handleSendMessage = () => {\n    const newMsgData = {\n      room: room,\n      user: user,\n      message: newMessage\n    }\n    socket.emit(\"send-msg\", newMsgData);\n    const msg = `${user} send: ${newMessage}`;\n    setMessages(prevState => [msg, ...prevState]);\n    setNewMessage(\"\");\n  }\n    \n\n  return (\n    <div className=\"main\" style={{padding:20}}>   \n        { !chatIsVisible ? \n          <>\n            <input type=\"text\" placeholder=\"Enter your name\" value={user} onChange={(e) => setUser(e.target.value)} />\n            <input type=\"text\" placeholder=\"Enter room name\" value={room} onChange={(e) => setRoom(e.target.value)} />\n            <button onClick={handleEnterChatRoom}>Enter chat room</button>\n          </>\n          :\n          <>\n            <h5>Room: {room} | User: {user}</h5>\n            <div className=\"chat-box\">\n              {messages.map((el => <div key={v4()}>{el}</div>))}\n            </div>\n\n            <input type=\"text\" placeholder=\"Enter message\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} />\n            <button onClick={handleSendMessage}>Send message</button>\n          </>\n        }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}